name: CI - Build and Test

# Executa em push para branch master e em todos os pull requests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Permite execução manual via GitHub UI
  workflow_dispatch:

# Cancela execuções anteriores do mesmo workflow se houver novo push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Build do projeto Android
  build:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # Checkout do código-fonte
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para análise completa de código

      # Configuração do JDK 21 (OpenJDK)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # OpenJDK via Eclipse Temurin
          java-version: '21'
          cache: 'gradle'  # Cache automático de dependências Gradle

      # Configuração do Gradle com cache otimizado
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: false

      # Torna o wrapper do Gradle executável
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Build completo do projeto (sem testes para separar jobs)
      - name: Build with Gradle
        run: ./gradlew assembleDebug --stacktrace --no-daemon

      # Upload do APK gerado como artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7

  # Job 2: Testes unitários
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # Checkout do código-fonte
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuração do JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      # Setup do Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      # Torna o gradlew executável
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Executa testes unitários
      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace --no-daemon

      # Gera relatório de testes
      - name: Generate test report
        if: always()
        run: ./gradlew testDebugUnitTest koverXmlReportDebug koverHtmlReportDebug --continue || true

      # Publica resultados dos testes
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            app/build/test-results/**/*.xml

      # Upload de relatórios HTML de testes
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            app/build/reports/tests/
            app/build/test-results/
          retention-days: 7

      # Comentário com cobertura de testes no PR (se aplicável)
      - name: Add coverage to PR
        id: kover
        if: github.event_name == 'pull_request'
        uses: mi-kas/kover-report@v1
        continue-on-error: true
        with:
          path: app/build/reports/kover/reportDebug.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Code Coverage
          update-comment: true
          min-coverage-overall: 40
          min-coverage-changed-files: 60

  # Job 3: Testes instrumentados (Android Tests)
  instrumented-tests:
    name: Instrumented Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        api-level: [29]  # Android 10 - versão estável para testes
        target: [default]

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      # Torna gradlew executável
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Habilita KVM (necessário para emulador Android)
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Executa testes instrumentados no emulador
      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: ./gradlew connectedDebugAndroidTest --stacktrace --no-daemon
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true

      # Upload de relatórios de testes instrumentados
      - name: Upload instrumented test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: instrumented-test-reports
          path: |
            app/build/reports/androidTests/
            app/build/outputs/androidTest-results/
          retention-days: 7

  # Job 4: Build de Release (somente após sucesso dos testes)
  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    needs: [build, unit-tests]  # Depende do sucesso dos jobs anteriores
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    timeout-minutes: 30

    steps:
      # Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      # Tornar gradlew executável
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Build de Release (com ProGuard/R8)
      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace --no-daemon

      # Upload do APK de release
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 14

  # Job 5: Status Summary (para visualização rápida)
  status-check:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [build, unit-tests]
    if: always()

    steps:
      - name: Check build status
        run: |
          echo "Build Status: ${{ needs.build.result }}"
          echo "Unit Tests Status: ${{ needs.unit-tests.result }}"

          if [[ "${{ needs.build.result }}" != "success" ]] || [[ "${{ needs.unit-tests.result }}" != "success" ]]; then
            echo "❌ CI Pipeline Failed"
            exit 1
          fi
          echo "✅ CI Pipeline Passed"
